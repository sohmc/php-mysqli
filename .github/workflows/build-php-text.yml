# https://github.com/docker-library/php/blob/master/.github/workflows/ci.yml
name: Docker Image Build for php

on:
  pull_request:
  push:

jobs:
  create-matrix:
    name: Create Job Matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions: ["8.2", "8.1", "8.0"]
    steps:
      - uses: actions/checkout@v3
      
      - name: directory listing
        run: |
          pwd
          ls -lRF

      - name: Get latest PHP versions.json
        working-directory: ./ci/library/
        run: |
          curl -o versions.json "https://raw.githubusercontent.com/docker-library/php/master/versions.json"
          pwd
          ls -lRF
      
      - name: Parse variants
        working-directory: ./ci/library/
        run: |
          OUTPUT=$(cat versions.json | jq --arg VERSION ${VERSION_IN} '[.[$VERSION].variants[] | split("/") | [$VERSION, .[1], .[0]] | join("-")]')

          mkdir -p /tmp/php-variants
          echo ${OUTPUT} > /tmp/php-variants/${VERSION_IN}-variants.json
          cat /tmp/php-variants/${VERSION_IN}-variants.json
        env:
          VERSION_IN: ${{ matrix.versions }}
      
      - name: Upload Variants
        uses: actions/upload-artifact@v3
        with:
          name: php-variants
          path: /tmp/php-variants/*
          if-no-files-found: error
          retention-days: 1
  
  merge-variants:
    name: Check Matrix
    runs-on: ubuntu-latest
    outputs:
      variants: ${{ steps.join-variants.outputs.variants }}
    needs: create-matrix
    
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: php-variants
          path: /tmp/php-variants/*

      - name: Join Variants
        id: join-variants
        run: |
          OUTPUT=$(jq -s '[.[]] | add' /tmp/php-variants/*)
          echo ${OUTPUT}
          echo "variants=${OUTPUT}" >> $GITHUB_OUTPUT

  create-build-matrix:
    # Don't run this yet.
    if: github.repository == 'octocat/octocat'
    name: Create Build Matrix
    runs-on: ubuntu-latest
    steps:
      - name: Get latest PHP file
        working-directory: ci/library/
        run: curl "https://github.com/docker-library/official-images/raw/master/library/php"
      
      - id: generate-matrix
        name: Generate Jobs
        working-directory: ci/
        run: |
          ./bashbrew-amd64 --library ./library cat php:${VERSION} \
            | sed '/^Architectures: /!d' \
            | sed 's/^Architectures: //' \
            | tr -d '\n' | jq -Rs 'split(", ")'
        env:
          VERSION: ${{ matrix.versions }}


