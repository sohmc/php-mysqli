name: Multi-Platform Docker Image Build CI

on: 
  push:
    branches: 
      - main
    paths:
    - 'ci/build_sha.txt'
  schedule:
    # Run daily at 5:47 AM.
    - cron: '47 5 * * *'

jobs:
  get-latest-commit:
    runs-on: ubuntu-latest
    outputs:
      new-commit: ${{ steps.compare-sha.outputs.NEWCOMMIT }}
      latest-php-sha: ${{ steps.get-latest-sha.outputs.GitCommit }}
    steps:       
      - name: Get latest commit SHA
        id: get-latest-sha
        run: |
          curl -kL -o php.json https://github.com/sohmc/docker-image-library-jsonizer/releases/latest/download/php
          GitCommit=$(jq -cr '.tags[0].GitCommit' php.json)
          echo GitCommit: ${GitCommit}
          echo "GitCommit=$GitCommit" >> $GITHUB_OUTPUT

      - name: Compare SHAs
        id: compare-sha
        run: |
          echo Archived SHA: ${ARCHIVEDSHA}
          echo Latest SHA:   ${LATESTSHA}
          if [[ $ARCHIVEDSHA == $LATESTSHA ]]; then 
            NEWCOMMIT=false
          else
            NEWCOMMIT=true
          fi

          echo "NEWCOMMIT=$NEWCOMMIT" >> $GITHUB_OUTPUT
          echo "NEWCOMMIT=$NEWCOMMIT"
        env:
          ARCHIVEDSHA: ${{ vars.PHP_COMMIT_SHA }}
          LATESTSHA: ${{ steps.get-latest-sha.outputs.GitCommit }}

  get-php-variants:
    if: needs.get-latest-commit.outputs.new-commit == 'true' || startsWith(github.event.head_commit.message, 'FORCE_BUILD=TRUE')
    runs-on: ubuntu-latest
    needs: get-latest-commit
    outputs:
      variants: ${{ steps.get-variants.outputs.variants }}

    steps:
      - name: Get variants
        id: get-variants
        run: |
          curl -kL -o php.json https://github.com/sohmc/docker-image-library-jsonizer/releases/latest/download/php
          VARIANTS=$(jq -cr '[.tags[].Directory | select(startswith("8.2") or startswith("8.1") or startswith("8.0"))]' php.json)
          echo Variants: ${VARIANTS}
          echo "variants=$VARIANTS" >> $GITHUB_OUTPUT
      
  get-variant-architectures:
    needs: get-php-variants
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        variants: ${{ fromJSON(needs.get-php-variants.outputs.variants) }}
        # variants: [ "8.0/alpine3.16/cli" ]
    uses: ./.github/workflows/build-image.yml 
    secrets: inherit
    with:
      variant: ${{ matrix.variants }}

  store-php-sha:
    runs-on: ubuntu
    needs: get-variant-architectures
    steps:
      - name: Get latest commit SHA
        id: get-latest-sha
        run: |
          curl -kL -o php.json https://github.com/sohmc/docker-image-library-jsonizer/releases/latest/download/php
          GitCommit=$(jq -cr '.tags[0].GitCommit' php.json)
          echo GitCommit: ${GitCommit}
          echo "GitCommit=$GitCommit" >> $GITHUB_OUTPUT

      - name: Store SHA in Github Variable
        run: |
          echo docker-library/official-images SHA: ${SHA}
          echo github repository: ${GITHUB_REPOSITORY}
          gh api --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${GITHUB_REPOSITORY}/actions/variables/PHP_COMMIT_SHA \
            -f name='PHP_COMMIT_SHA' \
            -f value="${SHA}"
        env:
          GH_TOKEN: ${{ secrets.TOKEN_FOR_ACTIONS }}
          SHA: ${{ steps.get-latest-sha.outputs.GitCommit }}

