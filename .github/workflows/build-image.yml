name: Build Images for a given variant

on:
  workflow_call:
    inputs:
      variant:
        type: string
        required: true
    outputs:
      architectures: 
        description: architectures that the variant supports
        value: ${{ jobs.build-images.outputs.architectures }}
      tags:
        description: All tags registered with the variant
        value: ${{ jobs.build-images.outputs.all_tags }}

jobs:
  build-images:
    runs-on: ubuntu-latest
    outputs:
      architectures: ${{ steps.get-architectures.outputs.platforms_csv }}
      all_tags: ${{ steps.build_dockerfile.outputs.tag }}

    name: ${{ inputs.variant }} --- Build Image
    steps:
      - uses: actions/checkout@v4

      - name: Get Architectures for ${{ inputs.variant }}
        id: get-architectures
        run: |
          curl -kL -o php.json https://github.com/sohmc/docker-image-library-jsonizer/releases/latest/download/php

          ARCHITECTURES=$(jq -cr --arg VARIANT ${{ inputs.variant }} '.tags[] | select(.Directory == $VARIANT).Architectures | join(",")' php.json)
          echo "Architectures: ${ARCHITECTURES}"
          
          PLATFORMS=""
          for i in ${ARCHITECTURES//,/ }
          do
            THIS_PLATFORM=$(jq -cr --arg ARCHITECTURE ${i} '.[$ARCHITECTURE]' ./ci/qemu-platform-map.json)
            if [ "${THIS_PLATFORM}" != "UNSUPPORTED" ]; then
              if [ -z "$PLATFORMS" ]; then
                PLATFORMS=$THIS_PLATFORM
              else
                PLATFORMS=${PLATFORMS},${THIS_PLATFORM}
              fi
            fi
          done
          
          echo "Platforms: ${PLATFORMS}"
          echo "platforms_csv=${PLATFORMS}" >> $GITHUB_OUTPUT
      
      - name: Build Dockerfile
        id: build_dockerfile
        run: |
          curl -kL -o php.json https://github.com/sohmc/docker-image-library-jsonizer/releases/latest/download/php
          echo VARIANT: ${{ inputs.variant }}
          TAG=$(jq -cr --arg VARIANT ${{ inputs.variant }} '.tags[] | select(.Directory == $VARIANT).Tags[0]' php.json)
          ALL_TAGS_CSV=$(jq -cr --arg VARIANT ${{ inputs.variant }} '.tags[] | select(.Directory == $VARIANT).Tags | map("sohmc/php-mysqli:" + .) | join(",")' php.json)
          echo "Tag: ${TAG}"
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "ALL_TAGS_CSV: ${ALL_TAGS_CSV}"
          echo "all_tags_csv=${ALL_TAGS_CSV}" >> $GITHUB_OUTPUT
          echo "++++ Building ${TAG} ++++"
          sed "s/{{TAG}}/$TAG/" ./ci/Dockerfile_Template > ./ci/Dockerfile
          cat ./ci/Dockerfile
      
      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: sohmc
          password: ${{ secrets.DOCKER_TOKEN }}  
      
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3

      - name: Show available architectures via QEMU
        run: echo ${AVAILABLE}
        env:
          AVAILABLE: ${{ steps.qemu.outputs.platforms }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Build the Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ci/Dockerfile
          platforms: ${{ steps.get-architectures.outputs.platforms_csv }}
          push: true
          tags: ${{ steps.build_dockerfile.outputs.all_tags_csv }}
  

